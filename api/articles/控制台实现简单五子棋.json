{"title":"控制台实现简单五子棋","uid":"fa8d416a37bbc6136857104b4a6769f9","slug":"控制台实现简单五子棋","date":"2023-11-17T07:54:14.000Z","updated":"2023-11-17T07:54:45.827Z","comments":true,"path":"api/articles/控制台实现简单五子棋.json","keywords":null,"cover":[],"content":"<h1 id=\"有（废）话要说\"><a href=\"#有（废）话要说\" class=\"headerlink\" title=\"有（废）话要说\"></a>有（废）话要说</h1><p><em>这是我的第一个简单控制台项目，只实现了一些简单的功能，由于水平太差，如果您有建议，我会积极吸取改进，感激不尽。</em></p>\n<h1 id=\"1-技术要求\"><a href=\"#1-技术要求\" class=\"headerlink\" title=\"1 技术要求\"></a>1 技术要求</h1><p>C语言数组、函数</p>\n<h1 id=\"2-功能\"><a href=\"#2-功能\" class=\"headerlink\" title=\"2 功能\"></a>2 功能</h1><p>菜单：<br><br>1.开始游戏<br><br>2.设置<br><br>3.退出</p>\n<p>点击开始游戏，加载地图。黑棋先落子，任意一方连成五子后，打印该方胜利，返回菜单。</p>\n<p>棋盘:<br><br>map[i][j]表示坐标(i, j)的值<br><br>0表示空地<br><br>1表示黑子<br><br>2表示白子<br></p>\n<p>回合数 : <br><br>flag表示当前的回合数  <br><br>偶数表示黑子，奇数表示白子</p>\n<h1 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3 代码实现\"></a>3 代码实现</h1><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;\n\nint map[19][19];\nint flag;\n\nvoid init();\nvoid showMenu();\nvoid showMap();\nint playerMove(int x,int y);\nint isWin(int x,int y);\nvoid showWin();\nvoid playGame();\n\nint main()&#123;\n    showMenu();\n\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">void playGame()&#123;\n    init();\n    while (1) &#123;\n        int x, y;\n        system(&quot;cls&quot;);\n        showMap();\n        printf(&quot;请输入落子位置：&quot;);\n        scanf(&quot;%d %d&quot;, &amp;x, &amp;y);\n        if (playerMove(x, y)&#x3D;&#x3D;0) &#123;\n            continue;\n        &#125;\n        if (isWin(x, y)) &#123;\n            showWin();\n        &#125;\n        flag++;\n    &#125;\n&#125;</code></pre>\n\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F;初始化数据\nvoid init()&#123;\n    flag&#x3D;0;\n    &#x2F;&#x2F;数组初始化为0；\n    memset(map,0,sizeof(map));\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">void showMenu()&#123;\n    int choice;\n    printf(&quot;1.开始游戏\\n&quot;);\n    printf(&quot;2.设置\\n&quot;);\n    printf(&quot;3.退出游戏\\n&quot;);\n    printf(&quot;请输入选择：\\n&quot;);\n    scanf(&quot;%d&quot;, &amp;choice);\n    switch(choice)&#123;\n        case 1:\n            playGame();\n            break;\n        case 2:\n            printf(&quot;敬请期待...\\n&quot;);\n            showMenu();\n            break;\n        case 3:\n            exit(0);\n        default:\n            printf(&quot;输入有误请重新输入：\\n&quot;);\n            showMenu();\n    &#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">void showMap()&#123;\n    for (int i &#x3D; 0; i &lt; 19; i++) &#123;\n        for (int j &#x3D; 0; j &lt; 19; j++) &#123;\n            if (map[i][j] &#x3D;&#x3D; 0) &#123;\n                printf(&quot;+ &quot;);\n            &#125;\n            &#x2F;&#x2F;1表示黑子\n            else if (map[i][j] &#x3D;&#x3D; 1) &#123;\n                printf(&quot;● &quot;);\n            &#125;\n            &#x2F;&#x2F;2表示白子\n            else if (map[i][j] &#x3D;&#x3D; 2) &#123;\n                printf(&quot;o &quot;);\n            &#125;\n        &#125;\n        printf(&quot;\\n&quot;);\n    &#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int playerMove(int x, int y)&#123;\n    if (map[x][y] &#x3D;&#x3D; 0) &#123;\n        if (flag % 2 &#x3D;&#x3D; 0) &#123;\n            map[x][y] &#x3D; 1;\n        &#125;else if (flag % 2 &#x3D;&#x3D; 1) &#123;\n            map[x][y] &#x3D; 2;\n        &#125;\n        return 1;\n    &#125;else &#123;\n        return 0;\n    &#125; \n&#125;</code></pre>\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int isWin(int x,int y)&#123;\n    &#x2F;&#x2F;横向判断\n    int count &#x3D; 0;\n    for (int i &#x3D; y - 4; i &lt;&#x3D; y + 4; i++)\n    &#123;\n        if (map[x][i] &#x3D;&#x3D; (flag % 2 + 1)) &#123;\n            count++;\n        &#125;\n    &#125;\n    if (count &#x3D;&#x3D; 5) &#123;\n        if (flag % 2 &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;else if (flag % 2&#x3D;&#x3D;1) &#123;\n            return 2;\n        &#125;\n    &#125;\n    &#x2F;&#x2F;纵向判断\n    count &#x3D; 0;\n    for (int i &#x3D; x - 4; i &lt;&#x3D; x + 4; i++)\n    &#123;\n        if (map[i][y] &#x3D;&#x3D; (flag % 2 + 1)) &#123;\n            count++;\n        &#125;\n    &#125;\n    if (count &#x3D;&#x3D; 5) &#123;\n        if (flag % 2 &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        else if (flag % 2 &#x3D;&#x3D; 1) &#123;\n            return 2;\n        &#125;\n    &#125;\n    &#x2F;&#x2F;主对角线判断\n    count &#x3D; 0;\n    for (int i &#x3D; x - 4, j &#x3D; y - 4; i &lt;&#x3D; x + 4 &amp;&amp; j &lt;&#x3D; x + 4; i++, j++)\n    &#123;\n        if (map[i][j] &#x3D;&#x3D; (flag % 2 + 1)) &#123;\n            count++;\n        &#125;\n    &#125;\n    if (count &#x3D;&#x3D; 5) &#123;\n        if (flag % 2 &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        else if (flag % 2 &#x3D;&#x3D; 1) &#123;\n            return 2;\n        &#125;\n    &#125;\n    &#x2F;&#x2F;副对角线判断\n    count &#x3D; 0;\n    for (int i &#x3D; x - 4, j &#x3D; y + 4; i &lt;&#x3D; x + 4 &amp;&amp; j &gt;&#x3D; y - 4; i++, j--)\n    &#123;\n        if (map[i][j] &#x3D;&#x3D; (flag % 2 + 1)) &#123;\n            count++;\n        &#125;\n    &#125;\n    if (count &#x3D;&#x3D; 5) &#123;\n        if (flag % 2 &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        else if (flag % 2 &#x3D;&#x3D; 1) &#123;\n            return 2;\n        &#125;\n    &#125;\n    return 0;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">void showWin()&#123;\n    system(&quot;cls&quot;);\n    if (flag % 2 &#x3D;&#x3D; 0) &#123;\n        printf(&quot;---黑子胜利---&quot;);\n    &#125;else if (flag % 2 &#x3D;&#x3D; 1) &#123;\n        printf(&quot;---白子胜利---&quot;);\n    &#125;\n    printf(&quot;按任意键返回主菜单&quot;);\n    getchar(); \n    getchar();\n    system(&quot;cls&quot;);\n    showMenu();\n&#125;</code></pre>\n<h1 id=\"4-演示\"><a href=\"#4-演示\" class=\"headerlink\" title=\"4 演示\"></a>4 演示</h1><p><img src=\"/post/%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E4%BA%94%E5%AD%90%E6%A3%8B/Users\\CS099\\Documents\\02Study\\03Notes\\computer_img\\d343b898886c4aa4ad33bf4b0fdbf9batplv-k3u1fbpfcp-jj-mark0000q75.gif\" alt=\"d8f4c99e-7c27-4b6d-ad37-0799ee17e2ed (1).gif\"></p>\n","feature":true,"text":"有（废）话要说这是我的第一个简单控制台项目，只实现了一些简单的功能，由于水平太差，如果您有建议，我会积极吸取改进，感激不尽。 1 技术要求C语言数组、函数 2 功能菜单：1.开始游戏2.设置3.退出 点击开始游戏，加载地图。黑棋先落子，任意一方连成五子后，打印该方胜利，返回菜单。...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%89%EF%BC%88%E5%BA%9F%EF%BC%89%E8%AF%9D%E8%A6%81%E8%AF%B4\"><span class=\"toc-text\">有（废）话要说</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E6%8A%80%E6%9C%AF%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">1 技术要求</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">2 功能</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">3 代码实现</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">4 演示</span></a></li></ol>","author":{"name":"问天道","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"二分查找","date":"2023-11-17T07:46:14.000Z","updated":"2023-11-17T07:47:50.553Z","comments":true,"path":"api/articles/二分查找.json","keywords":null,"cover":null,"text":"704.给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。 边界问题1 左闭右闭[left,right]int search(int* nums, int nu...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶之路","slug":"算法进阶之路","count":1,"path":"api/categories/算法进阶之路.json"}],"tags":[{"name":"二分查找","slug":"二分查找","count":1,"path":"api/tags/二分查找.json"}],"author":{"name":"问天道","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}