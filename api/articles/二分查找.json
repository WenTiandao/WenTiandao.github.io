{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"二分查找","date":"2023-11-17T07:46:14.000Z","updated":"2023-11-17T07:47:50.553Z","comments":true,"path":"api/articles/二分查找.json","keywords":null,"cover":null,"content":"<p>704.给定一个 <code>n</code> 个元素有序的（升序）整型数组 <code>nums</code> 和一个目标值 <code>target</code>  ，写一个函数搜索 <code>nums</code> 中的 <code>target</code>，如果目标值存在返回下标，否则返回 <code>-1</code>。</p>\n<h1 id=\"边界问题\"><a href=\"#边界问题\" class=\"headerlink\" title=\"边界问题\"></a>边界问题</h1><h2 id=\"1-左闭右闭-left-right\"><a href=\"#1-左闭右闭-left-right\" class=\"headerlink\" title=\"1 左闭右闭[left,right]\"></a>1 左闭右闭[left,right]</h2><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int search(int* nums, int numsSize, int target) &#123;\n    int left&#x3D;0,right&#x3D;numsSize-1; \n    while(left&lt;&#x3D;right)&#123; \n        int middle&#x3D;(left+right)&#x2F;2;\n        if(nums[middle]&lt;target)&#123;\n            left&#x3D;middle+1; \n        &#125;else if(nums[middle]&gt;target)&#123; \n            right&#x3D;middle-1; \n        &#125;else&#123;\n            return middle; \n        &#125; \n    &#125; \n    return -1; \n&#125;</code></pre>\n\n<h2 id=\"2-左闭右开-left-right\"><a href=\"#2-左闭右开-left-right\" class=\"headerlink\" title=\"2 左闭右开[left,right)\"></a>2 左闭右开[left,right)</h2><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int search(int* nums, int numsSize, int target) &#123;\n    int left&#x3D;0,right&#x3D;numsSize-1; \n    while(left&lt;right)&#123; \n        int middle&#x3D;(left+right)&#x2F;2;\n        if(nums[middle]&lt;target)&#123;\n            left&#x3D;middle+1; \n        &#125;else if(nums[middle]&gt;target)&#123; \n            &#x2F;&#x2F;右开区间，本身就不包含右边界\n            right&#x3D;middle; \n        &#125;else&#123;\n            return middle; \n        &#125; \n    &#125; \n    return -1; \n&#125;</code></pre>\n","feature":true,"text":"704.给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。 边界问题1 左闭右闭[left,right]int search(int* nums, int nu...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法进阶之路","slug":"算法进阶之路","count":1,"path":"api/categories/算法进阶之路.json"}],"tags":[{"name":"二分查找","slug":"二分查找","count":1,"path":"api/tags/二分查找.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BE%B9%E7%95%8C%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">边界问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%B7%A6%E9%97%AD%E5%8F%B3%E9%97%AD-left-right\"><span class=\"toc-text\">1 左闭右闭[left,right]</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%B7%A6%E9%97%AD%E5%8F%B3%E5%BC%80-left-right\"><span class=\"toc-text\">2 左闭右开[left,right)</span></a></li></ol></li></ol>","author":{"name":"问天道","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"控制台实现简单五子棋","uid":"fa8d416a37bbc6136857104b4a6769f9","slug":"控制台实现简单五子棋","date":"2023-11-17T07:54:14.000Z","updated":"2023-11-17T07:54:45.827Z","comments":true,"path":"api/articles/控制台实现简单五子棋.json","keywords":null,"cover":[],"text":"有（废）话要说这是我的第一个简单控制台项目，只实现了一些简单的功能，由于水平太差，如果您有建议，我会积极吸取改进，感激不尽。 1 技术要求C语言数组、函数 2 功能菜单：1.开始游戏2.设置3.退出 点击开始游戏，加载地图。黑棋先落子，任意一方连成五子后，打印该方胜利，返回菜单。...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"问天道","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"”hadoop和spark单机伪分布式集群搭建“","uid":"12060df9f4a3beced7cb40b966b788ad","slug":"hadoop和spark单机伪分布式集群搭建","date":"2023-05-05T07:03:36.000Z","updated":"2023-05-05T07:30:07.575Z","comments":true,"path":"api/articles/hadoop和spark单机伪分布式集群搭建.json","keywords":null,"cover":null,"text":" 配置网络： vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33 修改 bootproto&#x3D;static，onboot&#x3D;yes，并添加 IP 地址、网关、子网掩码和 DNS 信息 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"问天道","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}